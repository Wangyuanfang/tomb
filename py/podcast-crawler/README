====================
itunes爬虫有两个部分:
1. index 找到所有的podcast-id. (通过抓取目录页面和趋势页面)
2. lookup 根据podcast-id查找到feedUrl. 并且保存itunes上面存储的信息
index缓存时间可以在7天左右. lookup缓存时间则不必太长(author, url等信息通常都不会变动，而那些会变动的信息我们会主动根据url去抓取). TPlaylist里面一些item有skip标记, 这些skip标记可以定期清除比如30天. (./fix_data.py --fix-playlist-clear-skip)

podcast:
1. feed. 根据feedUrl检查rss是否有更新, 并且重新解析.
2. back fill. 将平台等信息整合进来. 通常这个过程只要做一次就行. （定期可以--force执行，比如30天)
前面两个过程都可以做缓存的，第一个通过http last-modified和etag字段来减少请求（配上content-length估计也行），第二个则可以根据更新时间和上次解析时间来做缓存. 这个缓存时间也可以在7天左右. 我们抓取feed信息只是为了更好地做检索, 所以其实不用特别及时. TCache里面一些feed item有skip标记，这些skip标记可以定期清除比如30天. (./fix_data.py --fix-cache-feed-clear-skip)

weight:
1. fill_itunes_weight. 从itunes上把各个podcast权重抓取下来
2. merge_weight. 将各个平台上的权重, 以及自己计算权重合并起来
3. update_toplist. 对各个国家和流派的权重做排序.

misc:

====================
HOW TO RUN:
1. ./itunes.py --index
2. ./itunes.py --lookup
3. ./podcast.py --feed
4. ./podcast.py --back-fill (定期比如30天可以加上--force)运行.
5. ./weight.py # 每周运行. 权重不需要经常变动.

====================
API

返回内容均为JSON格式.
```
{'code': 0, 'msg': OK, 'data': ...}
```
其中code表示结果代码，msg表示结果消息，而data就是具体数据.

** 获取流派名称和ID
URL: http://gw:8080/genre?country=gb

返回字典数组，每个字典里面有这些字段：
- id: 流派编号
- name: 流派名称

** 获取top podcast
URL: http://gw:8080/top?country=us[&genre=1301][&skip=0][&limit=20]

返回字典数组，每个字典里面有这些字段:
- key: podcast key
- feedUrl: rss url
- description: 描述信息
- author: 作者
- title: 标题
- cover-sm: 封面缩略图url
- cover-me: 封面中等图url
- cover-bg: 封面大图url

** 搜索功能
URL: http://gw:8080/search-itunes?q=郭德纲[&country=us][&language=en][&skip=0][&limit=20]

返回结果和"获取top podcast"结果一样

====================
Elasticsearch 检索

** 准备
为了更好地检索中文，日文，需要安装es下面三个插件
- bin/plugin install analysis-smartcn
- bin/plugin install analysis-kuromoji

** 导入数据
维护一个esbook表, 记录现在es存储情况: 包括内容的md5以及更新时间. 如果发现内容md5或者更新时间吻合的话，那么就不再往es里面写入。

feed的key使用sha1(feedUrl). track的key使用sha1(feedUrl)[:8] + '_' + sha1(trackUrl).

** Schema
PUT /pdindex-en/ # 创建索引

PUT /pdindex-en/_mapping/feed/ Feed数据模型
```
{
  "properties": {
    "title": {
      "type": "string",
      "analyzer": "english"
    },
    "description": {
      "type": "string",
      "analyzer": "english"
    },
    "author": {
      "type": "string",
      "analyzer": "english"
    },
    "genres": {
      "type": "integer"
    },
    "country": {
      "type": "string",
      "index": "not_analyzed"
    }
  }
}
```

PUT /pdindex-en/_mapping/track/ 单曲数据模型
```
{
  "properties": {
    "title": {
      "type": "string",
      "analyzer": "english"
    },
    "description": {
      "type": "string",
      "analyzer": "english"
    },
    "genres": {
      "type": "integer"
    },
    "country": {
      "type": "string",
      "index": "not_analyzed"
    },
    "url": {
      "type": "string",
      "index": "not_analyzed"
    },
    "feed_key": {
      "type": "string",
      "index": "not_analyzed"
    }
  }
}
```

** 插入数据
POST /pdindex-en/feed/d291d7ad7d817577fcc93cdb84688c01694ea91c
```
{
"title": "Limetown",
"description": "Ten years ago, over three hundred men, women and …",
"author": "Two-Up Productions",
	"country" : [
		"us",
		"ae"
	],
	"genres" : [
		1301,
		1405,
		26
	]
}
```

** 查询数据
查询语句 GET /pdindex-en/feed/_search
```
{
  "from": 0,
  "size": 10,
  // "fields": [],
  "query" : {
    "query_string": {
       "fields": ["title^5", "author^4", "description"],
       "query": "+(two things) +country:(cn us) +genres:(1301)",
       "use_dis_max": false
     }
  }
}
```
